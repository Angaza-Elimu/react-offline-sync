{"version":3,"sources":["/Users/DevAC/Desktop/Angaza/react-offline-sync/src/utils/checkInternetAccess.ts"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,IAAM,iBAAiB,GAAc;AACnC,EAAA,OAAO,EAAE,0BAD0B;AAEnC,EAAA,GAAG,EAAE,kCAF8B;AAGnC,EAAA,MAAM,EAAE,8BAH2B;AAInC,EAAA,aAAa,EAAE;AAJoB,CAArC;;AAMc,SAAU,mBAAV,CACZ,IADY,EACkB;AADhC,MAAA,KAAA,GAAA,IAAA;;AAGQ,MAAA,EAAA,GAAA,IAAA,IAAA,iBAAA;AAAA,MACJ,EAAA,GAAA,EAAA,CAAA,OADI;AAAA,MACJ,OAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,0BAAA,GAAA,EADI;AAAA,MAEJ,EAAA,GAAA,EAAA,CAAA,GAFI;AAAA,MAEJ,GAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,kCAAA,GAAA,EAFI;AAAA,MAGJ,EAAA,GAAA,EAAA,CAAA,MAHI;AAAA,MAGJ,MAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,8BAAA,GAAA,EAHI;AAAA,MAIJ,EAAA,GAAA,EAAA,CAAA,aAJI;AAAA,MAIJ,aAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,iCAAA,GAAA,EAJI;;AAON,SAAO,IAAI,OAAJ,CAAY,UAAO,OAAP,EAAwC;AAAA,WAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;;AAEvD,mBAAA,CAAA,CAAA,EAAM,8BAAgB;AACpB,cAAA,MAAM,EAAA,MADc;AAEpB,cAAA,GAAG,EAAA,GAFiB;AAGpB,cAAA,OAAO,EAAA,OAHa;AAIpB,cAAA,aAAa,EAAA;AAJO,aAAhB,CAAN,CAAA;;;AAAA,YAAA,EAAA,CAAA,IAAA;;AAMA,YAAA,OAAO,CAAC,IAAD,CAAP;;;;;AAEA,YAAA,OAAO,CAAC,KAAD,CAAP;;;;;;;KAVuD,CAAA;AAY1D,GAZM,CAAP;AAaD","sourcesContent":["import makeHttpRequest from './makeHttpRequest';\nimport {\n  DEFAULT_HTTP_METHOD,\n  DEFAULT_PING_SERVER_URL,\n  DEFAULT_TIMEOUT,\n  DEFAULT_CUSTOM_HEADERS,\n} from './constants';\nimport { HTTPMethod, AddUndefined, HTTPHeaders } from '../types';\n\ntype Arguments = {\n  url: string;\n  timeout: number;\n  method?: HTTPMethod;\n  customHeaders: HTTPHeaders;\n};\n\nconst DEFAULT_ARGUMENTS: Arguments = {\n  timeout: DEFAULT_TIMEOUT,\n  url: DEFAULT_PING_SERVER_URL,\n  method: DEFAULT_HTTP_METHOD,\n  customHeaders: DEFAULT_CUSTOM_HEADERS,\n};\nexport default function checkInternetAccess(\n  args?: AddUndefined<Arguments>,\n): Promise<boolean> {\n  const {\n    timeout = DEFAULT_TIMEOUT,\n    url = DEFAULT_PING_SERVER_URL,\n    method = DEFAULT_HTTP_METHOD,\n    customHeaders = DEFAULT_CUSTOM_HEADERS,\n  } = args || DEFAULT_ARGUMENTS;\n\n  return new Promise(async (resolve: (value: boolean) => void) => {\n    try {\n      await makeHttpRequest({\n        method,\n        url,\n        timeout,\n        customHeaders,\n      });\n      resolve(true);\n    } catch (e) {\n      resolve(false);\n    }\n  });\n}\n"]}
{"version":3,"sources":["/Users/DevAC/Desktop/Angaza/react-offline-sync/src/test/checkInternetConnection.test.ts"],"names":[],"mappings":"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","sourcesContent":["import NetInfo from '@react-native-community/netinfo';\nimport { mocked } from 'ts-jest/utils';\nimport checkInternetConnection from '../utils/checkInternetConnection';\nimport checkInternetAccess from '../utils/checkInternetAccess';\nimport {\n  DEFAULT_PING_SERVER_URL,\n  DEFAULT_TIMEOUT,\n  DEFAULT_HTTP_METHOD,\n  DEFAULT_CUSTOM_HEADERS,\n} from '../utils/constants';\n\njest.mock('../utils/checkInternetAccess');\n\nmocked(checkInternetAccess).mockResolvedValue(true);\n\nconst fetch = NetInfo.fetch as jest.Mock;\n\ndescribe('checkInternetConnection', () => {\n  afterEach(() => {\n    mocked(checkInternetAccess).mockClear();\n  });\n  describe('shouldPing = true', () => {\n    it(`calls checkInternetAccess and resolves the promise with its returned value`, async () => {\n      const isConnected = await checkInternetConnection('foo.com', 3000, true);\n      expect(checkInternetAccess).toHaveBeenCalledWith({\n        method: DEFAULT_HTTP_METHOD,\n        timeout: 3000,\n        url: 'foo.com',\n        customHeaders: DEFAULT_CUSTOM_HEADERS,\n      });\n      expect(isConnected).toBe(true);\n    });\n  });\n\n  describe('shouldPing = false', () => {\n    it(`does NOT call checkInternetAccess and directly resolves the promise with a boolean`, async () => {\n      fetch.mockImplementationOnce(() =>\n        Promise.resolve({ isConnected: false }),\n      );\n      const isConnected = await checkInternetConnection('foo.com', 3000, false);\n      expect(checkInternetAccess).not.toHaveBeenCalled();\n      expect(isConnected).toBe(false);\n    });\n  });\n\n  it('default parameters', async () => {\n    fetch.mockImplementationOnce(() => Promise.resolve({ isConnected: true }));\n    const isConnected = await checkInternetConnection();\n    expect(checkInternetAccess).toHaveBeenCalledWith({\n      method: DEFAULT_HTTP_METHOD,\n      timeout: DEFAULT_TIMEOUT,\n      url: DEFAULT_PING_SERVER_URL,\n      customHeaders: DEFAULT_CUSTOM_HEADERS,\n    });\n    expect(isConnected).toBe(true);\n  });\n});\n"]}
{"version":3,"sources":["/Users/DevAC/Desktop/Angaza/react-offline-sync/src/test/sagaChannels.test.ts"],"names":[],"mappings":"AAUA,IAAI,CAAC,IAAL,CAAU,YAAV;;;;AAVA;;AACA;;AACA;;AACA;;AAQA,IAAM,kBAAkB,GAAG,IAAI,CAAC,EAAL,EAA3B;AAEA,QAAQ,CAAC,sCAAD,EAAyC,YAAA;AAC/C,EAAA,EAAE,CAAC,8BAAD,EAAiC,YAAA;AACjC,QAAM,gBAAgB,GAAG,IAAI,CAAC,EAAL,GAAU,eAAV,CAA0B,SAA1B,CAAzB;AACA,uBAAO,uBAAP,EAAqB,kBAArB,CAAwC,gBAAxC;AACA,QAAM,oBAAoB,GAAG,IAAI,CAAC,EAAL,GAAU,eAAV,CAA0B,WAA1B,CAA7B;AACA,IAAA,MAAM,CAAC,iDAAqC,oBAArC,CAAD,CAAN,CAAmE,IAAnE,CACE,SADF;AAGA,IAAA,MAAM,CAAC,gBAAD,CAAN,CAAyB,oBAAzB,CAA8C,oBAA9C;AACD,GARC,CAAF;AAUA,EAAA,EAAE,CAAC,4DAAD,EAA+D,YAAA;AAC/D,QAAM,QAAQ,GAAG,IAAI,CAAC,EAAL,EAAjB;;AACC,qBAAQ,gBAAR,CAAuC,mBAAvC,CACC,kBADD;;AAGD,QAAM,WAAW,GAAG,kCAAsB,QAAtB,CAApB;AAEA,IAAA,MAAM,CAAC,iBAAQ,gBAAT,CAAN,CAAiC,oBAAjC,CAAsD,QAAtD;AACA,IAAA,WAAW;AACX,IAAA,MAAM,CAAC,kBAAD,CAAN,CAA2B,qBAA3B,CAAiD,CAAjD;AACD,GAVC,CAAF;AAWD,CAtBO,CAAR;AAwBA,QAAQ,CAAC,uBAAD,EAA0B,YAAA;AAChC,MAAM,QAAQ,GAAG,EAAjB;AACA,EAAA,EAAE,CAAC,8BAAD,EAAiC,YAAA;AACjC,QAAM,gBAAgB,GAAG,IAAI,CAAC,EAAL,GAAU,eAAV,CAA0B,SAA1B,CAAzB;AACA,uBAAO,uBAAP,EAAqB,kBAArB,CAAwC,gBAAxC;AACA,QAAM,qBAAqB,GAAG,IAAI,CAAC,EAAL,GAAU,eAAV,CAA0B,WAA1B,CAA9B;AACA,IAAA,MAAM,CAAC,kCAAsB,QAAtB,EAAgC,qBAAhC,CAAD,CAAN,CAA+D,IAA/D,CACE,SADF;AAGA,IAAA,MAAM,CAAC,qBAAD,CAAN,CAA8B,oBAA9B,CAAmD,QAAnD;AACA,IAAA,MAAM,CAAC,uBAAD,CAAN,CAAqB,oBAArB,CAA0C,WAA1C;AACD,GATC,CAAF;AAWA,EAAA,EAAE,CAAC,wDAAD,EAA2D,UAAA,IAAA,EAAI;AAC/D,IAAA,MAAM,CAAC,aAAP,GAAuB,IAAI,CAAC,EAAL,EAAvB;AACA,QAAM,QAAQ,GAAG,IAAI,CAAC,EAAL,EAAjB;AACA,QAAM,WAAW,GAAG,8BAAkB,QAAlB,EAA4B,QAA5B,CAApB;AACA,IAAA,UAAU,CAAC,YAAA;AACT,MAAA,MAAM,CAAC,QAAD,CAAN,CAAiB,oBAAjB,CAAsC,IAAtC;AACA,MAAA,IAAI;AACL,KAHS,EAGP,QAAQ,GAAG,EAHJ,CAAV;AAIA,IAAA,WAAW;AACX,IAAA,MAAM,CAAC,MAAM,CAAC,aAAR,CAAN,CAA6B,gBAA7B;AACD,GAVC,CAAF;AAWD,CAxBO,CAAR","sourcesContent":["import { mocked } from 'ts-jest/utils';\nimport { eventChannel } from 'redux-saga';\nimport NetInfo from '@react-native-community/netinfo';\nimport {\n  createNetInfoConnectionChangeChannel,\n  netInfoEventChannelFn,\n  createIntervalChannel,\n  intervalChannelFn,\n} from '../redux/sagas';\n\njest.mock('redux-saga');\nconst netInfoUnsubscribe = jest.fn();\n\ndescribe('createNetInfoConnectionChangeChannel', () => {\n  it('returns a redux-saga channel', () => {\n    const eventChannelMock = jest.fn().mockReturnValue('channel');\n    mocked(eventChannel).mockImplementation(eventChannelMock);\n    const mockNetInfoChannelFn = jest.fn().mockReturnValue('handlerFn');\n    expect(createNetInfoConnectionChangeChannel(mockNetInfoChannelFn)).toBe(\n      'channel',\n    );\n    expect(eventChannelMock).toHaveBeenCalledWith(mockNetInfoChannelFn);\n  });\n\n  it('netInfoEventChannelFn adheres to eventChannel cb interface', () => {\n    const emitMock = jest.fn();\n    (NetInfo.addEventListener as jest.Mock).mockReturnValueOnce(\n      netInfoUnsubscribe,\n    );\n    const unsubscribe = netInfoEventChannelFn(emitMock);\n\n    expect(NetInfo.addEventListener).toHaveBeenCalledWith(emitMock);\n    unsubscribe();\n    expect(netInfoUnsubscribe).toHaveBeenCalledTimes(1);\n  });\n});\n\ndescribe('createIntervalChannel', () => {\n  const interval = 50;\n  it('returns a redux-saga channel', () => {\n    const eventChannelMock = jest.fn().mockReturnValue('channel');\n    mocked(eventChannel).mockImplementation(eventChannelMock);\n    const mockIntervalChannelFn = jest.fn().mockReturnValue('handlerFn');\n    expect(createIntervalChannel(interval, mockIntervalChannelFn)).toBe(\n      'channel',\n    );\n    expect(mockIntervalChannelFn).toHaveBeenCalledWith(interval);\n    expect(eventChannel).toHaveBeenCalledWith('handlerFn');\n  });\n\n  it('intervalChannelFn adheres to eventChannel cb interface', done => {\n    global.clearInterval = jest.fn();\n    const emitMock = jest.fn();\n    const unsubscribe = intervalChannelFn(interval)(emitMock);\n    setTimeout(() => {\n      expect(emitMock).toHaveBeenCalledWith(true);\n      done();\n    }, interval + 20);\n    unsubscribe();\n    expect(global.clearInterval).toHaveBeenCalled();\n  });\n});\n"]}
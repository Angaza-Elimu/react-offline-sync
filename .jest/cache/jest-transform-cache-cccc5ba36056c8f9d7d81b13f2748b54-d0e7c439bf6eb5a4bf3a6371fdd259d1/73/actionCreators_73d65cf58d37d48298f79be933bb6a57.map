{"version":3,"sources":["/Users/DevAC/Desktop/Angaza/react-offline-sync/src/redux/actionCreators.ts"],"names":[],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,WAAD,EAAqB;AAAK,SAAC;AACzD,IAAA,IAAI,EAAE,WAAW,CAAC,iBADuC;AAEzD,IAAA,OAAO,EAAE;AAFgD,GAAD;AAGxD,CAHK;;;;AAKA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,MAAD,EAAuB;AAC7C,MAAA,EAAA,GAAA,MAAA,CAAA,IAAA;AAAA,MAAA,IAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAA;AAAA,MAAW,UAAA,GAAA,MAAA,CAAA,MAAA,EAAA,CAAA,MAAA,CAAA,CAAX;;AACR,MAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAO;AACL,MAAA,IAAI,EAAE,WAAW,CAAC,kBADb;AAEL,MAAA,OAAO,EAAE;AACP,QAAA,UAAU,EAAA,QAAA,CAAA,EAAA,EACL,UADK;AADH,OAFJ;AAOL,MAAA,IAAI,EAAA;AAPC,KAAP;AASD;;AAED,SAAO;AACL,IAAA,IAAI,EAAE,WAAW,CAAC,kBADb;AAEL,IAAA,OAAO,EAAE;AACP,MAAA,SAAS,EAAE;AADJ,KAFJ;AAKL,IAAA,IAAI,EAAA;AALC,GAAP;AAOD,CArBM;;;;AAuBA,IAAM,qBAAqB,GAAG,SAAxB,qBAAwB,CAAC,MAAD,EAAuB;AAAK,SAAC;AAChE,IAAA,IAAI,EAAE,WAAW,CAAC,wBAD8C;AAEhE,IAAA,OAAO,EAAE;AAFuD,GAAD;AAG/D,CAHK;;;;AAKA,IAAM,uBAAuB,GAAG,SAA1B,uBAA0B,CAAC,aAAD,EAAsB;AAAK,SAAC;AACjE,IAAA,IAAI,EAAE,WAAW,CAAC,0BAD+C;AAEjE,IAAA,OAAO,EAAE;AAFwD,GAAD;AAGhE,CAHK;;;;AAKA,IAAM,oBAAoB,GAAG,SAAvB,oBAAuB,CAAC,cAAD,EAA+B;AAAK,SAAC;AACvE,IAAA,IAAI,EAAE,WAAW,CAAC,sBADqD;AAEvE,IAAA,OAAO,EAAE;AAF8D,GAAD;AAGtE,CAHK","sourcesContent":["import * as actionTypes from './actionTypes';\nimport { EnqueuedAction, SemaphoreColor } from '../types';\n\nexport const connectionChange = (isConnected: boolean) => ({\n  type: actionTypes.CONNECTION_CHANGE as typeof actionTypes.CONNECTION_CHANGE,\n  payload: isConnected,\n});\n\nexport const fetchOfflineMode = (action: EnqueuedAction) => {\n  const { meta = {}, ...actionRest } = action;\n  if (typeof action === 'object') {\n    return {\n      type: actionTypes.FETCH_OFFLINE_MODE as typeof actionTypes.FETCH_OFFLINE_MODE,\n      payload: {\n        prevAction: {\n          ...actionRest,\n        },\n      },\n      meta,\n    };\n  }\n  // Thunk\n  return {\n    type: actionTypes.FETCH_OFFLINE_MODE as typeof actionTypes.FETCH_OFFLINE_MODE,\n    payload: {\n      prevThunk: action,\n    },\n    meta,\n  };\n};\n\nexport const removeActionFromQueue = (action: EnqueuedAction) => ({\n  type: actionTypes.REMOVE_FROM_ACTION_QUEUE as typeof actionTypes.REMOVE_FROM_ACTION_QUEUE,\n  payload: action,\n});\n\nexport const dismissActionsFromQueue = (actionTrigger: string) => ({\n  type: actionTypes.DISMISS_ACTIONS_FROM_QUEUE as typeof actionTypes.DISMISS_ACTIONS_FROM_QUEUE,\n  payload: actionTrigger,\n});\n\nexport const changeQueueSemaphore = (semaphoreColor: SemaphoreColor) => ({\n  type: actionTypes.CHANGE_QUEUE_SEMAPHORE,\n  payload: semaphoreColor,\n});\n\nexport type ConnectionChangeType = ReturnType<typeof connectionChange>;\nexport type FetchOfflineModeType = ReturnType<typeof fetchOfflineMode>;\nexport type RemoveActionFromQueueType = ReturnType<\n  typeof removeActionFromQueue\n>;\nexport type DismissActionsFromQueueType = ReturnType<\n  typeof dismissActionsFromQueue\n>;\nexport type ChangeQueueSemaphoreType = ReturnType<typeof changeQueueSemaphore>;\n\nexport type ReduxActions =\n  | ConnectionChangeType\n  | FetchOfflineModeType\n  | RemoveActionFromQueueType\n  | DismissActionsFromQueueType\n  | ChangeQueueSemaphoreType;\n"]}
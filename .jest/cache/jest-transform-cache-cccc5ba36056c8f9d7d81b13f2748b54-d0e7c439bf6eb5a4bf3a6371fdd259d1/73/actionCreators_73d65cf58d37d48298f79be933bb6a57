c38b55626ffe22010e565a7d957b6f56
/* istanbul ignore next */
var cov_2a5vciganf = function () {
  var path = "/Users/DevAC/Desktop/Angaza/react-offline-sync/src/redux/actionCreators.ts";
  var hash = "7999e2a6caf40bbbb639cced72fd8a1ba408d5eb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/DevAC/Desktop/Angaza/react-offline-sync/src/redux/actionCreators.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 30
        },
        end: {
          line: 1,
          column: 86
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 158
        }
      },
      "3": {
        start: {
          line: 8,
          column: 18
        },
        end: {
          line: 8,
          column: 67
        }
      },
      "4": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "5": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 21,
          column: 4
        }
      },
      "6": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 18,
          column: 5
        }
      },
      "7": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 21
        }
      },
      "8": {
        start: {
          line: 12,
          column: 27
        },
        end: {
          line: 12,
          column: 43
        }
      },
      "9": {
        start: {
          line: 13,
          column: 6
        },
        end: {
          line: 13,
          column: 23
        }
      },
      "10": {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 17,
          column: 7
        }
      },
      "11": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 68
        }
      },
      "12": {
        start: {
          line: 16,
          column: 56
        },
        end: {
          line: 16,
          column: 68
        }
      },
      "13": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 13
        }
      },
      "14": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 23,
          column: 41
        }
      },
      "15": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "16": {
        start: {
          line: 27,
          column: 10
        },
        end: {
          line: 27,
          column: 12
        }
      },
      "17": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 31,
          column: 3
        }
      },
      "18": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 84
        }
      },
      "19": {
        start: {
          line: 30,
          column: 72
        },
        end: {
          line: 30,
          column: 84
        }
      },
      "20": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 35,
          column: 3
        }
      },
      "21": {
        start: {
          line: 33,
          column: 71
        },
        end: {
          line: 35,
          column: 3
        }
      },
      "22": {
        start: {
          line: 33,
          column: 84
        },
        end: {
          line: 33,
          column: 85
        }
      },
      "23": {
        start: {
          line: 33,
          column: 91
        },
        end: {
          line: 33,
          column: 122
        }
      },
      "24": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 102
        }
      },
      "25": {
        start: {
          line: 34,
          column: 84
        },
        end: {
          line: 34,
          column: 102
        }
      },
      "26": {
        start: {
          line: 36,
          column: 2
        },
        end: {
          line: 36,
          column: 11
        }
      },
      "27": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 44,
          column: 1
        }
      },
      "28": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 43,
          column: 4
        }
      },
      "29": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 46,
          column: 44
        }
      },
      "30": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 70,
          column: 1
        }
      },
      "31": {
        start: {
          line: 49,
          column: 11
        },
        end: {
          line: 49,
          column: 22
        }
      },
      "32": {
        start: {
          line: 50,
          column: 13
        },
        end: {
          line: 50,
          column: 36
        }
      },
      "33": {
        start: {
          line: 51,
          column: 19
        },
        end: {
          line: 51,
          column: 43
        }
      },
      "34": {
        start: {
          line: 53,
          column: 2
        },
        end: {
          line: 61,
          column: 3
        }
      },
      "35": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 60,
          column: 6
        }
      },
      "36": {
        start: {
          line: 63,
          column: 2
        },
        end: {
          line: 69,
          column: 4
        }
      },
      "37": {
        start: {
          line: 72,
          column: 0
        },
        end: {
          line: 72,
          column: 44
        }
      },
      "38": {
        start: {
          line: 74,
          column: 28
        },
        end: {
          line: 79,
          column: 1
        }
      },
      "39": {
        start: {
          line: 75,
          column: 2
        },
        end: {
          line: 78,
          column: 4
        }
      },
      "40": {
        start: {
          line: 81,
          column: 0
        },
        end: {
          line: 81,
          column: 54
        }
      },
      "41": {
        start: {
          line: 83,
          column: 30
        },
        end: {
          line: 88,
          column: 1
        }
      },
      "42": {
        start: {
          line: 84,
          column: 2
        },
        end: {
          line: 87,
          column: 4
        }
      },
      "43": {
        start: {
          line: 90,
          column: 0
        },
        end: {
          line: 90,
          column: 58
        }
      },
      "44": {
        start: {
          line: 92,
          column: 27
        },
        end: {
          line: 97,
          column: 1
        }
      },
      "45": {
        start: {
          line: 93,
          column: 2
        },
        end: {
          line: 96,
          column: 4
        }
      },
      "46": {
        start: {
          line: 99,
          column: 0
        },
        end: {
          line: 99,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 40
          },
          end: {
            line: 10,
            column: 41
          }
        },
        loc: {
          start: {
            line: 10,
            column: 52
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 30
          },
          end: {
            line: 11,
            column: 31
          }
        },
        loc: {
          start: {
            line: 11,
            column: 43
          },
          end: {
            line: 21,
            column: 3
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 36
          },
          end: {
            line: 26,
            column: 37
          }
        },
        loc: {
          start: {
            line: 26,
            column: 52
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 26
      },
      "3": {
        name: "connectionChange",
        decl: {
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 48
          }
        },
        loc: {
          start: {
            line: 39,
            column: 62
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 39
      },
      "4": {
        name: "fetchOfflineMode",
        decl: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 48
          }
        },
        loc: {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 48
      },
      "5": {
        name: "removeActionFromQueue",
        decl: {
          start: {
            line: 74,
            column: 37
          },
          end: {
            line: 74,
            column: 58
          }
        },
        loc: {
          start: {
            line: 74,
            column: 67
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 74
      },
      "6": {
        name: "dismissActionsFromQueue",
        decl: {
          start: {
            line: 83,
            column: 39
          },
          end: {
            line: 83,
            column: 62
          }
        },
        loc: {
          start: {
            line: 83,
            column: 78
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 83
      },
      "7": {
        name: "changeQueueSemaphore",
        decl: {
          start: {
            line: 92,
            column: 36
          },
          end: {
            line: 92,
            column: 56
          }
        },
        loc: {
          start: {
            line: 92,
            column: 73
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 92
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 15
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 15
          },
          end: {
            line: 10,
            column: 19
          }
        }, {
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 10,
            column: 36
          }
        }, {
          start: {
            line: 10,
            column: 40
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 13
          },
          end: {
            line: 21,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 13
          },
          end: {
            line: 11,
            column: 26
          }
        }, {
          start: {
            line: 11,
            column: 30
          },
          end: {
            line: 21,
            column: 3
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 16,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 16,
            column: 68
          }
        }, {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 16,
            column: 68
          }
        }],
        line: 16
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 13
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 13
          },
          end: {
            line: 26,
            column: 17
          }
        }, {
          start: {
            line: 26,
            column: 21
          },
          end: {
            line: 26,
            column: 32
          }
        }, {
          start: {
            line: 26,
            column: 36
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 84
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 84
          }
        }, {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 84
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 50
          }
        }, {
          start: {
            line: 30,
            column: 54
          },
          end: {
            line: 30,
            column: 70
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 2
          },
          end: {
            line: 35,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 2
          },
          end: {
            line: 35,
            column: 3
          }
        }, {
          start: {
            line: 33,
            column: 2
          },
          end: {
            line: 35,
            column: 3
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 33,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 33,
            column: 15
          }
        }, {
          start: {
            line: 33,
            column: 19
          },
          end: {
            line: 33,
            column: 69
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 102
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 102
          }
        }, {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 102
          }
        }],
        line: 34
      },
      "9": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 27
          }
        }, {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 34,
            column: 82
          }
        }],
        line: 34
      },
      "10": {
        loc: {
          start: {
            line: 50,
            column: 13
          },
          end: {
            line: 50,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 29
          },
          end: {
            line: 50,
            column: 31
          }
        }, {
          start: {
            line: 50,
            column: 34
          },
          end: {
            line: 50,
            column: 36
          }
        }],
        line: 50
      },
      "11": {
        loc: {
          start: {
            line: 53,
            column: 2
          },
          end: {
            line: 61,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 2
          },
          end: {
            line: 61,
            column: 3
          }
        }, {
          start: {
            line: 53,
            column: 2
          },
          end: {
            line: 61,
            column: 3
          }
        }],
        line: 53
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "7999e2a6caf40bbbb639cced72fd8a1ba408d5eb"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard =
/* istanbul ignore next */
(cov_2a5vciganf.s[0]++, require("@babel/runtime/helpers/interopRequireWildcard"));

/* istanbul ignore next */
cov_2a5vciganf.s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2a5vciganf.s[2]++;
exports.changeQueueSemaphore = exports.dismissActionsFromQueue = exports.removeActionFromQueue = exports.fetchOfflineMode = exports.connectionChange = void 0;
var actionTypes =
/* istanbul ignore next */
(cov_2a5vciganf.s[3]++, _interopRequireWildcard(require("./actionTypes")));

var __assign =
/* istanbul ignore next */
(cov_2a5vciganf.s[4]++,
/* istanbul ignore next */
(cov_2a5vciganf.b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2a5vciganf.b[0][1]++, this.__assign) ||
/* istanbul ignore next */
(cov_2a5vciganf.b[0][2]++, function () {
  /* istanbul ignore next */
  cov_2a5vciganf.f[0]++;
  cov_2a5vciganf.s[5]++;
  __assign =
  /* istanbul ignore next */
  (cov_2a5vciganf.b[1][0]++, Object.assign) ||
  /* istanbul ignore next */
  (cov_2a5vciganf.b[1][1]++, function (t) {
    /* istanbul ignore next */
    cov_2a5vciganf.f[1]++;
    cov_2a5vciganf.s[6]++;

    for (var s, i =
    /* istanbul ignore next */
    (cov_2a5vciganf.s[7]++, 1), n =
    /* istanbul ignore next */
    (cov_2a5vciganf.s[8]++, arguments.length); i < n; i++) {
      /* istanbul ignore next */
      cov_2a5vciganf.s[9]++;
      s = arguments[i];

      /* istanbul ignore next */
      cov_2a5vciganf.s[10]++;

      for (var p in s) {
        /* istanbul ignore next */
        cov_2a5vciganf.s[11]++;

        if (Object.prototype.hasOwnProperty.call(s, p)) {
          /* istanbul ignore next */
          cov_2a5vciganf.b[2][0]++;
          cov_2a5vciganf.s[12]++;
          t[p] = s[p];
        } else
        /* istanbul ignore next */
        {
          cov_2a5vciganf.b[2][1]++;
        }
      }
    }

    /* istanbul ignore next */
    cov_2a5vciganf.s[13]++;
    return t;
  });

  /* istanbul ignore next */
  cov_2a5vciganf.s[14]++;
  return __assign.apply(this, arguments);
}));

var __rest =
/* istanbul ignore next */
(cov_2a5vciganf.s[15]++,
/* istanbul ignore next */
(cov_2a5vciganf.b[3][0]++, this) &&
/* istanbul ignore next */
(cov_2a5vciganf.b[3][1]++, this.__rest) ||
/* istanbul ignore next */
(cov_2a5vciganf.b[3][2]++, function (s, e) {
  /* istanbul ignore next */
  cov_2a5vciganf.f[2]++;
  var t =
  /* istanbul ignore next */
  (cov_2a5vciganf.s[16]++, {});

  /* istanbul ignore next */
  cov_2a5vciganf.s[17]++;

  for (var p in s) {
    /* istanbul ignore next */
    cov_2a5vciganf.s[18]++;

    if (
    /* istanbul ignore next */
    (cov_2a5vciganf.b[5][0]++, Object.prototype.hasOwnProperty.call(s, p)) &&
    /* istanbul ignore next */
    (cov_2a5vciganf.b[5][1]++, e.indexOf(p) < 0)) {
      /* istanbul ignore next */
      cov_2a5vciganf.b[4][0]++;
      cov_2a5vciganf.s[19]++;
      t[p] = s[p];
    } else
    /* istanbul ignore next */
    {
      cov_2a5vciganf.b[4][1]++;
    }
  }

  /* istanbul ignore next */
  cov_2a5vciganf.s[20]++;

  if (
  /* istanbul ignore next */
  (cov_2a5vciganf.b[7][0]++, s != null) &&
  /* istanbul ignore next */
  (cov_2a5vciganf.b[7][1]++, typeof Object.getOwnPropertySymbols === "function")) {
    /* istanbul ignore next */
    cov_2a5vciganf.b[6][0]++;
    cov_2a5vciganf.s[21]++;

    for (var i =
    /* istanbul ignore next */
    (cov_2a5vciganf.s[22]++, 0), p =
    /* istanbul ignore next */
    (cov_2a5vciganf.s[23]++, Object.getOwnPropertySymbols(s)); i < p.length; i++) {
      /* istanbul ignore next */
      cov_2a5vciganf.s[24]++;

      if (
      /* istanbul ignore next */
      (cov_2a5vciganf.b[9][0]++, e.indexOf(p[i]) < 0) &&
      /* istanbul ignore next */
      (cov_2a5vciganf.b[9][1]++, Object.prototype.propertyIsEnumerable.call(s, p[i]))) {
        /* istanbul ignore next */
        cov_2a5vciganf.b[8][0]++;
        cov_2a5vciganf.s[25]++;
        t[p[i]] = s[p[i]];
      } else
      /* istanbul ignore next */
      {
        cov_2a5vciganf.b[8][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_2a5vciganf.b[6][1]++;
  }

  cov_2a5vciganf.s[26]++;
  return t;
}));

/* istanbul ignore next */
cov_2a5vciganf.s[27]++;

var connectionChange = function connectionChange(isConnected) {
  /* istanbul ignore next */
  cov_2a5vciganf.f[3]++;
  cov_2a5vciganf.s[28]++;
  return {
    type: actionTypes.CONNECTION_CHANGE,
    payload: isConnected
  };
};

/* istanbul ignore next */
cov_2a5vciganf.s[29]++;
exports.connectionChange = connectionChange;

/* istanbul ignore next */
cov_2a5vciganf.s[30]++;

var fetchOfflineMode = function fetchOfflineMode(action) {
  /* istanbul ignore next */
  cov_2a5vciganf.f[4]++;

  var _a =
  /* istanbul ignore next */
  (cov_2a5vciganf.s[31]++, action.meta),
      meta =
  /* istanbul ignore next */
  (cov_2a5vciganf.s[32]++, _a === void 0 ?
  /* istanbul ignore next */
  (cov_2a5vciganf.b[10][0]++, {}) :
  /* istanbul ignore next */
  (cov_2a5vciganf.b[10][1]++, _a)),
      actionRest =
  /* istanbul ignore next */
  (cov_2a5vciganf.s[33]++, __rest(action, ["meta"]));

  /* istanbul ignore next */
  cov_2a5vciganf.s[34]++;

  if (typeof action === 'object') {
    /* istanbul ignore next */
    cov_2a5vciganf.b[11][0]++;
    cov_2a5vciganf.s[35]++;
    return {
      type: actionTypes.FETCH_OFFLINE_MODE,
      payload: {
        prevAction: __assign({}, actionRest)
      },
      meta: meta
    };
  } else
  /* istanbul ignore next */
  {
    cov_2a5vciganf.b[11][1]++;
  }

  cov_2a5vciganf.s[36]++;
  return {
    type: actionTypes.FETCH_OFFLINE_MODE,
    payload: {
      prevThunk: action
    },
    meta: meta
  };
};

/* istanbul ignore next */
cov_2a5vciganf.s[37]++;
exports.fetchOfflineMode = fetchOfflineMode;

/* istanbul ignore next */
cov_2a5vciganf.s[38]++;

var removeActionFromQueue = function removeActionFromQueue(action) {
  /* istanbul ignore next */
  cov_2a5vciganf.f[5]++;
  cov_2a5vciganf.s[39]++;
  return {
    type: actionTypes.REMOVE_FROM_ACTION_QUEUE,
    payload: action
  };
};

/* istanbul ignore next */
cov_2a5vciganf.s[40]++;
exports.removeActionFromQueue = removeActionFromQueue;

/* istanbul ignore next */
cov_2a5vciganf.s[41]++;

var dismissActionsFromQueue = function dismissActionsFromQueue(actionTrigger) {
  /* istanbul ignore next */
  cov_2a5vciganf.f[6]++;
  cov_2a5vciganf.s[42]++;
  return {
    type: actionTypes.DISMISS_ACTIONS_FROM_QUEUE,
    payload: actionTrigger
  };
};

/* istanbul ignore next */
cov_2a5vciganf.s[43]++;
exports.dismissActionsFromQueue = dismissActionsFromQueue;

/* istanbul ignore next */
cov_2a5vciganf.s[44]++;

var changeQueueSemaphore = function changeQueueSemaphore(semaphoreColor) {
  /* istanbul ignore next */
  cov_2a5vciganf.f[7]++;
  cov_2a5vciganf.s[45]++;
  return {
    type: actionTypes.CHANGE_QUEUE_SEMAPHORE,
    payload: semaphoreColor
  };
};

/* istanbul ignore next */
cov_2a5vciganf.s[46]++;
exports.changeQueueSemaphore = changeQueueSemaphore;